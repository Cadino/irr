#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 24, 2020 07:02:00 PM CAT  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True
from tkinter import *
from tkinter import ttk
from PIL import ImageTk,Image
import clima_support
import os.path
import splash
from time import strftime
from conversores import convGrausCelcus
from splash import splashCiberzStart
from threading import Timer
from configparser import ConfigParser
import schedule
import time
import datetime
import getpass

import socket
socket.gethostname()


contentTime=[]
contentTemp=[]
contentWing=[]
contentWeather=[]

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    print(convGrausCelcus(256.98))
    top = Toplevel1 (root)
    clima_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    clima_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font9 = "-family {DejaVu Sans} -size 16 -weight bold"
        def openConfigure():
            print("ola new windows")
            from subprocess import call
            call(["python3", "acesso.py"])
            
            
        top.geometry("858x708+335+0")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1, 1)
        top.title("SysIrr")
        top.configure(background="#ffffff")
        top.configure(highlightbackground="#ffffff")
        top.configure(highlightcolor="black")
        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.07, rely=0.113, relheight=0.225
                , relwidth=0.874)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(text='''Clima''')
        self.Labelframe1.configure(background="#ffffff")

        self.Label2 = tk.Label(self.Labelframe1)
        self.Label2.place(relx=0.067, rely=0.057, height=144, width=114
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(background="#ffffff")
        photo_location = os.path.join(prog_location,"./rsz_1th.gif")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Label2.configure(image=_img0)
        self.Label2.configure(text='''Label''')

        self.lbl_time = tk.Label(self.Labelframe1)
        self.lbl_time.place(relx=0.26, rely=0.245, height=17, width=146
                , bordermode='ignore')
        self.lbl_time.configure(activebackground="#f9f9f9")
        self.lbl_time.configure(background="#ffffff")
        self.lbl_time.configure(text=contentTime[0])

        self.lbd_temp1 = tk.Label(self.Labelframe1)
        self.lbd_temp1.place(relx=0.267, rely=0.396, height=17, width=142
                , bordermode='ignore')
        self.lbd_temp1.configure(activebackground="#f9f9f9")
        self.lbd_temp1.configure(background="#ffffff")
        self.lbd_temp1.configure(text="Temp: "+str(convGrausCelcus(contentTemp[0]))+"℃")

        self.lbl_weather1 = tk.Label(self.Labelframe1)
        self.lbl_weather1.place(relx=0.267, rely=0.566, height=17, width=136
                , bordermode='ignore')
        self.lbl_weather1.configure(activebackground="#f9f9f9")
        self.lbl_weather1.configure(background="#ffffff")
        self.lbl_weather1.configure(text=contentWeather[0])

        self.Lbl_wing1 = tk.Label(self.Labelframe1)
        self.Lbl_wing1.place(relx=0.267, rely=0.742, height=17, width=136
                , bordermode='ignore')
        self.Lbl_wing1.configure(activebackground="#f9f9f9")
        self.Lbl_wing1.configure(background="#ffffff")
        self.Lbl_wing1.configure(highlightbackground="#ffffff")
        self.Lbl_wing1.configure(text="Wing: "+str(contentWing[0])+"m/s")

        self.lbl_time2 = tk.Label(self.Labelframe1)
        self.lbl_time2.place(relx=0.48, rely=0.226, height=17, width=156
                , bordermode='ignore')
        self.lbl_time2.configure(background="#ffffff")
        self.lbl_time2.configure(text=contentTime[1])

        self.lbl_temp2 = tk.Label(self.Labelframe1)
        self.lbl_temp2.place(relx=0.48, rely=0.396, height=17, width=156
                , bordermode='ignore')
        self.lbl_temp2.configure(background="#ffffff")
        self.lbl_temp2.configure(text="Temp: "+str(convGrausCelcus(contentTemp[1]))+"℃")

        self.lbl_weather2 = tk.Label(self.Labelframe1)
        self.lbl_weather2.place(relx=0.48, rely=0.566, height=17, width=156
                , bordermode='ignore')
        self.lbl_weather2.configure(background="#ffffff")
        self.lbl_weather2.configure(text=contentWeather[1])

        self.lbl_wing = tk.Label(self.Labelframe1)
        self.lbl_wing.place(relx=0.48, rely=0.742, height=17, width=156
                , bordermode='ignore')
        self.lbl_wing.configure(background="#ffffff")
        self.lbl_wing.configure(text="Wing: "+str(contentWing[1])+"m/s")

        self.lbl_time3 = tk.Label(self.Labelframe1)
        self.lbl_time3.place(relx=0.72, rely=0.239, height=18, width=156
                , bordermode='ignore')
        self.lbl_time3.configure(background="#ffffff")
        self.lbl_time3.configure(text=contentTime[2])

        self.lbl_temp3 = tk.Label(self.Labelframe1)
        self.lbl_temp3.place(relx=0.72, rely=0.421, height=18, width=156
                , bordermode='ignore')
        self.lbl_temp3.configure(background="#ffffff")
        self.lbl_temp3.configure(text="Temp: "+str(convGrausCelcus(contentTemp[2]))+"℃")

        self.lbl_weather3 = tk.Label(self.Labelframe1)
        self.lbl_weather3.place(relx=0.72, rely=0.604, height=18, width=156
                , bordermode='ignore')
        self.lbl_weather3.configure(background="#ffffff")
        self.lbl_weather3.configure(text=contentWeather[2])

        self.lbl_wing3 = tk.Label(self.Labelframe1)
        self.lbl_wing3.place(relx=0.72, rely=0.78, height=19, width=156
                , bordermode='ignore')
        self.lbl_wing3.configure(background="#ffffff")
        self.lbl_wing3.configure(text="Wing: "+str(contentWing[2])+"m/s")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.431, rely=0.042, height=46, width=126)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(font="-family {Droid Serif} -size 16 -weight bold -slant roman -underline 0 -overstrike 0")
        self.Label1.configure(text='''SysIrr''')

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.35, rely=0.918, height=32, width=252)
        self.Label7.configure(background="#fff")
        photo_location = os.path.join(prog_location,"./rsz_1rsz_cyber.gif")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.Label7.configure(image=_img1)
        self.Label7.configure(text='''Label''')

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.07, rely=0.353, relheight=0.206
                , relwidth=0.268)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(text='''Humidade do solo''')
        self.Labelframe2.configure(background="#ffffff")

        self.Label3 = tk.Label(self.Labelframe2)
        self.Label3.place(relx=0.391, rely=0.342, height=59, width=36
                , bordermode='ignore')
        self.Label3.configure(background="#ffffff")
        photo_location = os.path.join(prog_location,"./rsz_1umidade.gif")
        global _img2
        _img2 = tk.PhotoImage(file=photo_location)
        self.Label3.configure(image=_img2)
        self.Label3.configure(text='''Label''')

        self.lbl_hum1 = tk.Label(self.Labelframe2)
        self.lbl_hum1.place(relx=0.087, rely=0.205, height=19, width=36
                , bordermode='ignore')
        self.lbl_hum1.configure(background="#ffffff")
        self.lbl_hum1.configure(text='''Label''')

        self.lbl_hum2 = tk.Label(self.Labelframe2)
        self.lbl_hum2.place(relx=0.739, rely=0.205, height=19, width=36
                , bordermode='ignore')
        self.lbl_hum2.configure(background="#ffffff")
        self.lbl_hum2.configure(text='''Label''')

        self.lbl_hum4 = tk.Label(self.Labelframe2)
        self.lbl_hum4.place(relx=0.739, rely=0.753, height=19, width=36
                , bordermode='ignore')
        self.lbl_hum4.configure(background="#fff")
        self.lbl_hum4.configure(text='''Label''')

        self.lbl_hum3 = tk.Label(self.Labelframe2)
        self.lbl_hum3.place(relx=0.087, rely=0.753, height=19, width=36
                , bordermode='ignore')
        self.lbl_hum3.configure(background="#fff")
        self.lbl_hum3.configure(text='''Label''')

        self.Labelframe3 = tk.LabelFrame(top)
        self.Labelframe3.place(relx=0.373, rely=0.353, relheight=0.206
                , relwidth=0.268)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(text='''Nivel de Agua''')
        self.Labelframe3.configure(background="#ffffff")

        self.Label4 = tk.Label(self.Labelframe3)
        self.Label4.place(relx=0.652, rely=0.342, height=59, width=36
                , bordermode='ignore')
        self.Label4.configure(background="#ffffff")
        photo_location = os.path.join(prog_location,"./rsz_agua.gif")
        global _img3
        _img3 = tk.PhotoImage(file=photo_location)
        self.Label4.configure(image=_img3)
        self.Label4.configure(text='''Label''')

        self.lbl_nivel_agua = tk.Label(self.Labelframe3)
        self.lbl_nivel_agua.place(relx=0.13, rely=0.479, height=19, width=106
                , bordermode='ignore')
        self.lbl_nivel_agua.configure(background="#ffffff")
        self.lbl_nivel_agua.configure(font=font9)
        self.lbl_nivel_agua.configure(text='''Label''')

        self.Labelframe4 = tk.LabelFrame(top)
        self.Labelframe4.place(relx=0.676, rely=0.353, relheight=0.206
                , relwidth=0.268)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(text='''Tempo''')
        self.Labelframe4.configure(background="#ffffff")

        self.Label5 = tk.Label(self.Labelframe4)
        self.Label5.place(relx=0.696, rely=0.342, height=49, width=52
                , bordermode='ignore')
        self.Label5.configure(background="#ffffff")
        photo_location = os.path.join(prog_location,"./rsz_time.gif")
        global _img4
        _img4 = tk.PhotoImage(file=photo_location)
        self.Label5.configure(image=_img4)
        self.Label5.configure(text='''Label''')

        self.lbl_time_now = tk.Label(self.Labelframe4)
        self.lbl_time_now.place(relx=0.037, rely=0.479, height=19, width=150
                , bordermode='ignore')
        self.lbl_time_now.configure(background="#ffffff")
        self.lbl_time_now.configure(font=font9)
        def time(): 
            timeHow = strftime('%H:%M:%S %p')
            timeHowTrigger = strftime('%H:%M') 
            self.lbl_time_now.config(text = timeHow) 
            self.lbl_time_now.after(1000, time)
            TemposVal1=list()
            DiaSemanaVal1=list()
            TemposVal2=list()
            DiaSemanaVal2=list()
            TemposVal3=list()
            DiaSemanaVal3=list()
            TemposVal4=list()
            DiaSemanaVal4=list()
            config_object = ConfigParser()
            config_object.read("config.ini") 
            Huminfo1 = config_object["HUM_VALVULA1"]
            print("Humidade da valvula 1 {}".format(Huminfo1["humidade"]))
            Huminfo2 = config_object["HUM_VALVULA2"]
            print("Humidade da valvula 2 {}".format(Huminfo2["humidade"]))
            Huminfo3 = config_object["HUM_VALVULA3"]
            print("Humidade da valvula 3 {}".format(Huminfo3["humidade"]))
            Huminfo4 = config_object["HUM_VALVULA4"]
            print("Humidade da valvula 4 {}".format(Huminfo1["humidade"]))
            #ler a humidade e comparar do file


            #*************************************************
            TempObjVal1 = config_object["TEMPO_VALVULA1"]
            TemposVal1.append(TempObjVal1["tempv11"])
            TemposVal1.append(TempObjVal1["tempv12"])
            TemposVal1.append(TempObjVal1["tempv13"])
            print(TemposVal1)
            
            DiaSemanaObjVal1 = config_object["DIAS_SEMANA_VALVULA1"]
            DiaSemanaVal1.append(DiaSemanaObjVal1["0"])
            DiaSemanaVal1.append(DiaSemanaObjVal1["1"])
            DiaSemanaVal1.append(DiaSemanaObjVal1["2"])
            DiaSemanaVal1.append(DiaSemanaObjVal1["3"])
            DiaSemanaVal1.append(DiaSemanaObjVal1["4"])
            DiaSemanaVal1.append(DiaSemanaObjVal1["5"])
            DiaSemanaVal1.append(DiaSemanaObjVal1["6"])
            print(DiaSemanaVal1)           
            weekno = datetime.datetime.today().weekday()
            print (weekno)
            for count, DiaSemanaVal1 in enumerate(DiaSemanaVal1):
                print(count, DiaSemanaVal1)
                print(TemposVal1[0])
                print(timeHowTrigger)
                if(count==weekno and (TemposVal1[0]==timeHowTrigger or TemposVal1[1]==timeHowTrigger or TemposVal1[2]==timeHowTrigger)):
                    print("ok, bomba 1 ligada")
            #*************************************************
            TempObjVal2 = config_object["TEMPO_VALVULA2"]
            TemposVal2.append(TempObjVal2["tempv11"])
            TemposVal2.append(TempObjVal2["tempv12"])
            TemposVal2.append(TempObjVal2["tempv13"])
            print(TemposVal2)
            
            DiaSemanaObjVal2 = config_object["DIAS_SEMANA_VALVULA2"]
            DiaSemanaVal2.append(DiaSemanaObjVal2["0"])
            DiaSemanaVal2.append(DiaSemanaObjVal2["1"])
            DiaSemanaVal2.append(DiaSemanaObjVal2["2"])
            DiaSemanaVal2.append(DiaSemanaObjVal2["3"])
            DiaSemanaVal2.append(DiaSemanaObjVal2["4"])
            DiaSemanaVal2.append(DiaSemanaObjVal2["5"])
            DiaSemanaVal2.append(DiaSemanaObjVal2["6"])
            print(DiaSemanaVal2)           
            for count, DiaSemanaVal2 in enumerate(DiaSemanaVal2):
                print(count, DiaSemanaVal2)
                print(TemposVal2[0])
                print(timeHowTrigger)
                if(count==weekno and (TemposVal2[0]==timeHowTrigger or TemposVal2[1]==timeHowTrigger or TemposVal2[2]==timeHowTrigger)):
                    print("ok, bomba 2 ligada")
            #*************************************************
            TempObjVal3 = config_object["TEMPO_VALVULA3"]
            TemposVal3.append(TempObjVal3["tempv11"])
            TemposVal3.append(TempObjVal3["tempv12"])
            TemposVal3.append(TempObjVal3["tempv13"])
            print(TemposVal3)
            
            DiaSemanaObjVal3 = config_object["DIAS_SEMANA_VALVULA3"]
            DiaSemanaVal3.append(DiaSemanaObjVal3["0"])
            DiaSemanaVal3.append(DiaSemanaObjVal3["1"])
            DiaSemanaVal3.append(DiaSemanaObjVal3["2"])
            DiaSemanaVal3.append(DiaSemanaObjVal3["3"])
            DiaSemanaVal3.append(DiaSemanaObjVal3["4"])
            DiaSemanaVal3.append(DiaSemanaObjVal3["5"])
            DiaSemanaVal3.append(DiaSemanaObjVal3["6"])
            print(DiaSemanaVal3)           
            for count, DiaSemanaVal3 in enumerate(DiaSemanaVal3):
                print(count, DiaSemanaVal3)
                print(TemposVal3[0])
                print(timeHowTrigger)
                if(count==weekno and (TemposVal3[0]==timeHowTrigger or TemposVal3[1]==timeHowTrigger or TemposVal3[2]==timeHowTrigger)):
                    print("ok, bomba 3 ligada")  
            #*************************************************
            TempObjVal4 = config_object["TEMPO_VALVULA4"]
            TemposVal4.append(TempObjVal4["tempv11"])
            TemposVal4.append(TempObjVal4["tempv12"])
            TemposVal4.append(TempObjVal4["tempv13"])
            print(TemposVal4)
            
            DiaSemanaObjVal4 = config_object["DIAS_SEMANA_VALVULA4"]
            DiaSemanaVal4.append(DiaSemanaObjVal4["0"])
            DiaSemanaVal4.append(DiaSemanaObjVal4["1"])
            DiaSemanaVal4.append(DiaSemanaObjVal4["2"])
            DiaSemanaVal4.append(DiaSemanaObjVal4["3"])
            DiaSemanaVal4.append(DiaSemanaObjVal4["4"])
            DiaSemanaVal4.append(DiaSemanaObjVal4["5"])
            DiaSemanaVal4.append(DiaSemanaObjVal4["6"])
            print(DiaSemanaVal4)           
            for count, DiaSemanaVal4 in enumerate(DiaSemanaVal4):
                print(count, DiaSemanaVal4)
                print(TemposVal4[0])
                print(timeHowTrigger)
                if(count==weekno and (TemposVal4[0]==timeHowTrigger or TemposVal4[1]==timeHowTrigger or TemposVal4[2]==timeHowTrigger)):
                    print("ok, bomba 4 ligada")         
            
            schedule.run_pending()
     
        time()
        self.Labelframe5 = tk.LabelFrame(top)
        self.Labelframe5.place(relx=0.07, rely=0.579, relheight=0.12
                , relwidth=0.874)
        self.Labelframe5.configure(relief='groove')
        self.Labelframe5.configure(text='''Catalogo''')
        self.Labelframe5.configure(background="#ffffff")

        self.lbl_dia1 = tk.Label(self.Labelframe5)
        self.lbl_dia1.place(relx=0.12, rely=0.235, height=19, width=36
                , bordermode='ignore')
        self.lbl_dia1.configure(background="#ffffff")
        self.lbl_dia1.configure(text='''Feijao''')

        self.lbl_dia2 = tk.Label(self.Labelframe5)
        self.lbl_dia2.place(relx=0.213, rely=0.235, height=19, width=36
                , bordermode='ignore')
        self.lbl_dia2.configure(background="#ffffff")
        self.lbl_dia2.configure(text='''couve''')

        self.lbl_dia3 = tk.Label(self.Labelframe5)
        self.lbl_dia3.place(relx=0.307, rely=0.235, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia3.configure(background="#ffffff")
        self.lbl_dia3.configure(text='''cenoura''')

        self.lbl_dia4 = tk.Label(self.Labelframe5)
        self.lbl_dia4.place(relx=0.4, rely=0.235, height=19, width=36
                , bordermode='ignore')
        self.lbl_dia4.configure(background="#ffffff")
        self.lbl_dia4.configure(text='''Alface''')

        self.lbl_dia5 = tk.Label(self.Labelframe5)
        self.lbl_dia5.place(relx=0.493, rely=0.235, height=19, width=36
                , bordermode='ignore')
        self.lbl_dia5.configure(background="#ffffff")
        self.lbl_dia5.configure(text='''Milho''')

        self.lbl_dia6 = tk.Label(self.Labelframe5)
        self.lbl_dia6.place(relx=0.587, rely=0.235, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia6.configure(background="#ffffff")
        self.lbl_dia6.configure(text='''Cebola''')

        self.lbl_dia7 = tk.Label(self.Labelframe5)
        self.lbl_dia7.place(relx=0.68, rely=0.235, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia7.configure(background="#ffffff")
        self.lbl_dia7.configure(text='''Pimento''')

        self.Label20 = tk.Label(self.Labelframe5)
        self.Label20.place(relx=0.027, rely=0.235, height=59, width=42
                , bordermode='ignore')
        self.Label20.configure(background="#ffffff")
        photo_location = os.path.join(prog_location,"./rsz_historico.gif")
        global _img5
        _img5 = tk.PhotoImage(file=photo_location)
        self.Label20.configure(image=_img5)
        self.Label20.configure(text='''Tomate''')

        self.lbl_dia8 = tk.Label(self.Labelframe5)
        self.lbl_dia8.place(relx=0.76, rely=0.235, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia8.configure(background="#ffffff")
        self.lbl_dia8.configure(text='''Repolho''')

        self.lbl_dia9 = tk.Label(self.Labelframe5)
        self.lbl_dia9.place(relx=0.853, rely=0.235, height=19, width=53
                , bordermode='ignore')
        self.lbl_dia9.configure(background="#ffffff")
        self.lbl_dia9.configure(text='''Tomate''')

        self.lbl_dia1_rega = tk.Label(self.Labelframe5)
        self.lbl_dia1_rega.place(relx=0.12, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia1_rega.configure(background="#ffffff")
        self.lbl_dia1_rega.configure(text='''55-90%''')

        self.lbl_dia2_rega = tk.Label(self.Labelframe5)
        self.lbl_dia2_rega.place(relx=0.213, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia2_rega.configure(background="#ffffff")
        self.lbl_dia2_rega.configure(text='''55-90%''')

        self.lbl_dia3_rega = tk.Label(self.Labelframe5)
        self.lbl_dia3_rega.place(relx=0.307, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia3_rega.configure(background="#ffffff")
        self.lbl_dia3_rega.configure(text='''65-95%''')

        self.lbl_dia4_rega = tk.Label(self.Labelframe5)
        self.lbl_dia4_rega.place(relx=0.4, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia4_rega.configure(background="#ffffff")
        self.lbl_dia4_rega.configure(text='''70-96%''')

        self.lbl_dia5_rega = tk.Label(self.Labelframe5)
        self.lbl_dia5_rega.place(relx=0.493, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia5_rega.configure(background="#ffffff")
        self.lbl_dia5_rega.configure(text='''40-80%''')

        self.lbl_dia6_rega = tk.Label(self.Labelframe5)
        self.lbl_dia6_rega.place(relx=0.587, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia6_rega.configure(background="#ffffff")
        self.lbl_dia6_rega.configure(text='''75-98%''')

        self.lbl_dia7_rega = tk.Label(self.Labelframe5)
        self.lbl_dia7_rega.place(relx=0.68, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia7_rega.configure(background="#ffffff")
        self.lbl_dia7_rega.configure(text='''60-92%''')

        self.lbl_dia8_rega = tk.Label(self.Labelframe5)
        self.lbl_dia8_rega.place(relx=0.76, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia8_rega.configure(background="#ffffff")
        self.lbl_dia8_rega.configure(text='''55-90%''')

        self.lbl_dia9_rega = tk.Label(self.Labelframe5)
        self.lbl_dia9_rega.place(relx=0.853, rely=0.588, height=19, width=50
                , bordermode='ignore')
        self.lbl_dia9_rega.configure(background="#ffffff")
        self.lbl_dia9_rega.configure(text='''60-92%''')

        self.Labelframe6 = tk.LabelFrame(top)
        self.Labelframe6.place(relx=0.07, rely=0.72, relheight=0.12
                , relwidth=0.874)
        self.Labelframe6.configure(relief='groove')
        self.Labelframe6.configure(text='''Configuracao''')
        self.Labelframe6.configure(background="#ffffff")
        self.Labelframe6.configure(highlightbackground="#ffffff")

        self.btn_valvula1 = tk.Button(self.Labelframe6)
        self.btn_valvula1.place(relx=0.4, rely=0.353, height=29, width=54
                , bordermode='ignore')
        self.btn_valvula1.configure(background="#ff0000")
        self.btn_valvula1.configure(text='''Val1''')

        self.btn_config = tk.Button(self.Labelframe6)
        self.btn_config.place(relx=0.133, rely=0.353, height=29, width=66
                , bordermode='ignore')
        self.btn_config.configure(text='''Config''')
        self.btn_config.configure(command = openConfigure)

        self.btn_bomba = tk.Button(self.Labelframe6)
        self.btn_bomba.place(relx=0.267, rely=0.353, height=29, width=70
                , bordermode='ignore')
        self.btn_bomba.configure(background="#ff0000")
        self.btn_bomba.configure(text='''Bomba''')

        self.Label19 = tk.Label(self.Labelframe6)
        self.Label19.place(relx=0.013, rely=0.235, height=56, width=52
                , bordermode='ignore')
        self.Label19.configure(background="#ffffff")
        photo_location = os.path.join(prog_location,"./rsz_definicao.gif")
        global _img6
        _img6 = tk.PhotoImage(file=photo_location)
        self.Label19.configure(image=_img6)
        self.Label19.configure(text='''Label''')

        self.btn_val2 = tk.Button(self.Labelframe6)
        self.btn_val2.place(relx=0.533, rely=0.353, height=29, width=54
                , bordermode='ignore')
        self.btn_val2.configure(background="#ff0000")
        self.btn_val2.configure(text='''Val2''')

        self.btn_val3 = tk.Button(self.Labelframe6)
        self.btn_val3.place(relx=0.667, rely=0.353, height=29, width=54
                , bordermode='ignore')
        self.btn_val3.configure(background="#ff0000")
        self.btn_val3.configure(text='''Val3''')

        self.btn_val4 = tk.Button(self.Labelframe6)
        self.btn_val4.place(relx=0.8, rely=0.353, height=29, width=54
                , bordermode='ignore')
        self.btn_val4.configure(background="#ff0000")
        self.btn_val4.configure(text='''Val4''')

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.037, rely=0.014, height=58, width=76)
        self.Label6.configure(background="#fff")
        photo_location = os.path.join(prog_location,"./logo.gif")
        global _img7
        _img7 = tk.PhotoImage(file=photo_location)
        self.Label6.configure(image=_img7)
        self.Label6.configure(text='''Label''')
        def timeout():
            
            from weather import tempArray
            from weather import timeArray
            from weather import wingArray
            from weather import weatherArray
            contentTime=timeArray()
            contentTemp=tempArray()
            contentWing=wingArray()
            contentWeather=weatherArray()
            self.lbl_time3.configure(text=contentTime[2])
            self.lbl_wing3.configure(text="Wing: "+str(contentWing[2])+"m/s")
            self.lbl_temp3.configure(text="Temp: "+str(convGrausCelcus(contentTemp[2]))+"℃")
            self.lbl_wing.configure(text="Wing: "+str(contentWing[1])+"m/s")
            self.lbl_weather2.configure(text=contentWeather[1])
            self.lbl_temp2.configure(text="Temp: "+str(convGrausCelcus(contentTemp[1]))+"℃")
            self.Lbl_wing1.configure(text="Wing: "+str(contentWing[0])+"m/s")
            self.lbl_weather1.configure(text=contentWeather[0])
            self.lbl_time.configure(text=contentTime[0])
            print("run timeout")
            
            
        schedule.every().hour.do(timeout)
         


if __name__ == '__main__':
    config_object = ConfigParser()
    config_object.read("logUser.ini")
    USER_ID = config_object["User ID"]
    MAC_ID = config_object["Machine ID"]
    if(getpass.getuser() == USER_ID["User"] and socket.gethostname() == MAC_ID["MAC"]):
        splashCiberzStart()
        from weather import tempArray
        from weather import timeArray
        from splashlogo import splashCiberzEnd
        splashCiberzEnd()
        from weather import wingArray
        from weather import weatherArray
        contentTime=timeArray()
        contentTemp=tempArray()
        contentWing=wingArray()
        contentWeather=weatherArray()
        vp_start_gui()
    else:
        print("Faca o registro: Contacte: cadinidod@gmail.com")





